// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PagosWebApi.Context;

#nullable disable

namespace PagosWebApi.Migrations
{
    [DbContext(typeof(PaymentContext))]
    [Migration("20230124121117_payments")]
    partial class payments
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PagosWebApi.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AccountId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Saldo")
                        .HasColumnType("double precision");

                    b.HasKey("AccountId");

                    b.HasIndex("ClientId");

                    b.ToTable("Accounts", (string)null);

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            ClientId = 1,
                            Name = "Pedro Martinez",
                            Number = "1233321",
                            Saldo = 2300000.0
                        },
                        new
                        {
                            AccountId = 2,
                            ClientId = 2,
                            Name = "Maira Ortega",
                            Number = "4523251",
                            Saldo = 250000.0
                        });
                });

            modelBuilder.Entity("PagosWebApi.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClientId"));

                    b.Property<string>("DocNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients", (string)null);

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            DocNumber = "2344221",
                            Email = "pmartinez@gmail.com",
                            Name = "Pedro Martinez"
                        },
                        new
                        {
                            ClientId = 2,
                            DocNumber = "2331231",
                            Email = "maor@gmail.com",
                            Name = "Maria Ortega"
                        });
                });

            modelBuilder.Entity("PagosWebApi.Models.Debt", b =>
                {
                    b.Property<int>("DebtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DebtId"));

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<string>("DocReference")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double>("Saldo")
                        .HasColumnType("double precision");

                    b.Property<int>("ServiceId")
                        .HasColumnType("integer");

                    b.HasKey("DebtId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Debts", (string)null);

                    b.HasData(
                        new
                        {
                            DebtId = 1,
                            Amount = 120000.0,
                            ClientId = 1,
                            DocReference = "111232",
                            Saldo = 120000.0,
                            ServiceId = 1
                        },
                        new
                        {
                            DebtId = 2,
                            Amount = 90000.0,
                            ClientId = 1,
                            DocReference = "1233321",
                            Saldo = 90000.0,
                            ServiceId = 2
                        },
                        new
                        {
                            DebtId = 3,
                            Amount = 290000.0,
                            ClientId = 1,
                            DocReference = "4523251",
                            Saldo = 290000.0,
                            ServiceId = 3
                        });
                });

            modelBuilder.Entity("PagosWebApi.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PaymentId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<double>("DebtAmount")
                        .HasColumnType("double precision");

                    b.Property<DateOnly>("DueDate")
                        .HasColumnType("date");

                    b.Property<double>("PaymentAmount")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PaymentServiceId")
                        .HasColumnType("integer");

                    b.Property<double>("Saldo")
                        .HasColumnType("double precision");

                    b.HasKey("PaymentId");

                    b.HasIndex("AccountId");

                    b.HasIndex("PaymentServiceId");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("PagosWebApi.Models.PaymentEntity", b =>
                {
                    b.Property<int>("PaymentEntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PaymentEntityId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("PaymentEntityId");

                    b.ToTable("PaymentEntities", (string)null);

                    b.HasData(
                        new
                        {
                            PaymentEntityId = 1,
                            Name = "Ande"
                        },
                        new
                        {
                            PaymentEntityId = 2,
                            Name = "Tigo"
                        },
                        new
                        {
                            PaymentEntityId = 3,
                            Name = "Banco Continental"
                        });
                });

            modelBuilder.Entity("PagosWebApi.Models.PaymentService", b =>
                {
                    b.Property<int>("PaymentServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PaymentServiceId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("PaymentEntityId")
                        .HasColumnType("integer");

                    b.HasKey("PaymentServiceId");

                    b.HasIndex("PaymentEntityId");

                    b.ToTable("PaymentServices", (string)null);

                    b.HasData(
                        new
                        {
                            PaymentServiceId = 1,
                            Name = "Pago de factura",
                            PaymentEntityId = 1
                        },
                        new
                        {
                            PaymentServiceId = 2,
                            Name = "Pago de factura Telefonia",
                            PaymentEntityId = 2
                        },
                        new
                        {
                            PaymentServiceId = 3,
                            Name = "Pago de factura Internet",
                            PaymentEntityId = 2
                        },
                        new
                        {
                            PaymentServiceId = 4,
                            Name = "Pago de factura TV",
                            PaymentEntityId = 2
                        },
                        new
                        {
                            PaymentServiceId = 5,
                            Name = "Pago de prestamos",
                            PaymentEntityId = 3
                        },
                        new
                        {
                            PaymentServiceId = 6,
                            Name = "Pago de tarjeta de credito",
                            PaymentEntityId = 3
                        });
                });

            modelBuilder.Entity("PagosWebApi.Models.Account", b =>
                {
                    b.HasOne("PagosWebApi.Models.Client", "Client")
                        .WithMany("Accounts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("PagosWebApi.Models.Debt", b =>
                {
                    b.HasOne("PagosWebApi.Models.Client", "Client")
                        .WithMany("Debts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PagosWebApi.Models.PaymentService", "Service")
                        .WithMany("Debts")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("PagosWebApi.Models.Payment", b =>
                {
                    b.HasOne("PagosWebApi.Models.Account", "Account")
                        .WithMany("Payments")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PagosWebApi.Models.PaymentService", "PaymentService")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("PaymentService");
                });

            modelBuilder.Entity("PagosWebApi.Models.PaymentService", b =>
                {
                    b.HasOne("PagosWebApi.Models.PaymentEntity", "PaymentEntity")
                        .WithMany("Services")
                        .HasForeignKey("PaymentEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentEntity");
                });

            modelBuilder.Entity("PagosWebApi.Models.Account", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("PagosWebApi.Models.Client", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Debts");
                });

            modelBuilder.Entity("PagosWebApi.Models.PaymentEntity", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("PagosWebApi.Models.PaymentService", b =>
                {
                    b.Navigation("Debts");

                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
