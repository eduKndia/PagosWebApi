// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PagosWebApi.Context;

#nullable disable

namespace PagosWebApi.Migrations
{
    [DbContext(typeof(PaymentContext))]
    [Migration("20230123194329_incial")]
    partial class incial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PagosWebApi.Models.PaymentEntity", b =>
                {
                    b.Property<int>("PaymentEntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PaymentEntityId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("PaymentEntityId");

                    b.ToTable("PaymentEntities", (string)null);

                    b.HasData(
                        new
                        {
                            PaymentEntityId = 1,
                            Name = "Ande"
                        },
                        new
                        {
                            PaymentEntityId = 2,
                            Name = "Tigo"
                        },
                        new
                        {
                            PaymentEntityId = 3,
                            Name = "Banco Continental"
                        });
                });

            modelBuilder.Entity("PagosWebApi.Models.PaymentService", b =>
                {
                    b.Property<int>("PaymentServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PaymentServiceId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("PaymentEntityId")
                        .HasColumnType("integer");

                    b.HasKey("PaymentServiceId");

                    b.HasIndex("PaymentEntityId");

                    b.ToTable("PaymentServices", (string)null);

                    b.HasData(
                        new
                        {
                            PaymentServiceId = 1,
                            Name = "Pago de factura",
                            PaymentEntityId = 1
                        },
                        new
                        {
                            PaymentServiceId = 2,
                            Name = "Pago de factura Telefonia",
                            PaymentEntityId = 2
                        },
                        new
                        {
                            PaymentServiceId = 3,
                            Name = "Pago de factura Internet",
                            PaymentEntityId = 2
                        },
                        new
                        {
                            PaymentServiceId = 4,
                            Name = "Pago de factura TV",
                            PaymentEntityId = 2
                        },
                        new
                        {
                            PaymentServiceId = 5,
                            Name = "Pago de prestamos",
                            PaymentEntityId = 3
                        },
                        new
                        {
                            PaymentServiceId = 6,
                            Name = "Pago de tarjeta de credito",
                            PaymentEntityId = 3
                        });
                });

            modelBuilder.Entity("PagosWebApi.Models.PaymentService", b =>
                {
                    b.HasOne("PagosWebApi.Models.PaymentEntity", "PaymentEntity")
                        .WithMany("Services")
                        .HasForeignKey("PaymentEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentEntity");
                });

            modelBuilder.Entity("PagosWebApi.Models.PaymentEntity", b =>
                {
                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
